// details build configuration, tasks, and plugins

plugins {
    id 'java'
    id 'io.quarkus'
}

// why maven? for compatibility?
repositories {
    mavenCentral()
    mavenLocal()
}

// Requiered Libraries
dependencies {

    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-rest'
    // Template umgang (Frontend)
    implementation 'io.quarkus:quarkus-qute'

    // mariadb datenbanktreiber
    implementation 'io.quarkus:quarkus-jdbc-mariadb'
    
    // ORM Object-Relational Mapping
    // Object -> Tabellen Ã¼bersetzung 
    // Hybernate und Panche bietet eine objekt-style Schreibweise, die weniger Boilerplate code anfordert
    // Erstes Beispiel Ohne diese Bibliothek 
    implementation 'io.quarkus:quarkus-hibernate-orm-panache'
    
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
}

group = 'org.acme'
version = '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

